{"version":3,"sources":["co-browser-storage/co-browser-storage-cmp.ts"],"names":["CoBrowserStorageCmp","CoBrowserStorageCmp.constructor","CoBrowserStorageCmp.ngOnInit","CoBrowserStorageCmp.addKvp","CoBrowserStorageCmp.updateKvp","CoBrowserStorageCmp.resetKvp","CoBrowserStorageCmp.removeKvp"],"mappings":"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","file":"co-browser-storage/co-browser-storage-cmp.js","sourcesContent":["import {Component, Input, ChangeDetectionStrategy} from 'angular2/core'\nimport {Store} from '@ngrx/store'\nimport * as KvpActions from './services/kvp-reducer'\nimport {PersistenceService} from './services/persistence-service'\nimport {StorageListCmp} from './components/storage-list-cmp'\nimport {NewItemCmp} from './components/new-item-cmp'\n\n@Component({\n  selector: 'co-browser-storage-cmp',\n  template: `\n    <div *ngIf=\"!noRender\">\n      <h4>co-browser-storage</h4>\n      <storage-list-cmp\n        [kvps]=\"kvps | async\"\n        (remove)=\"removeKvp($event)\"\n        (update)=\"updateKvp($event)\"\n        (reset)=\"resetKvp($event)\">\n      </storage-list-cmp>\n      <br>\n      Add temporary item<br>\n      <new-item-cmp (create)=\"addKvp($event)\"></new-item-cmp>\n    </div>\n  `,\n  directives: [StorageListCmp, NewItemCmp],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [PersistenceService]\n})\nexport class CoBrowserStorageCmp {\n  @Input() coBrowserStorageConfig;\n  @Input() noRender;\n  public kvps;\n  private kvpsInited = false;\n\n  constructor (private store: Store<any>, private persistenceService:PersistenceService) {\n    this.kvps = store.select('kvps')\n\n    this.kvps.subscribe(state => {\n      // Whenever the state has been updated, save it\n      if (this.kvpsInited) {\n        this.persistenceService.saveState(state)\n      } else {\n        this.kvpsInited = true\n      }\n    })\n  }\n\n  ngOnInit () {\n    // Initialize stuff\n    let initialState = this.persistenceService.initialize(this.coBrowserStorageConfig)\n    this.store.dispatch({\n      type: KvpActions.INIT_KVPS,\n      payload: initialState\n    })\n  }\n\n  addKvp (newKvp) {\n    this.store.dispatch({\n      type: KvpActions.ADD_KVP,\n      payload: newKvp\n    })\n  }\n\n  updateKvp (kvp) {\n    var test = this.store.dispatch({\n      type: KvpActions.UPDATE_KVP,\n      payload: kvp\n    })\n  }\n\n  resetKvp (kvp) {\n    let resettedItem = this.persistenceService.getItemFromSchema(kvp.key)\n    if (resettedItem) {\n      this.store.dispatch({\n        type: KvpActions.UPDATE_KVP,\n        payload: resettedItem\n      })\n    }\n  }\n\n  removeKvp (kvp) {\n    // Note: this is a bit of hack but it works\n    this.persistenceService.removeItem(kvp)\n    this.store.dispatch({\n      type: KvpActions.REMOVE_KVP,\n      payload: kvp\n    })\n  }\n}"],"sourceRoot":"/source/"}